var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.195,1,1.673]],["body/controllers/AppController.html",[0,1.664,1,2.331,2,1.251,3,0.769,4,0.645,5,0.645,6,2.126,7,0.645,8,1.96,9,2.791,10,1.753,11,0.061,12,1.251,13,2.692,14,1.474,15,1.96,16,1.022,17,0.769,18,2.202,19,2.692,20,0.769,21,0.433,22,2.126,23,1.753,24,1.474,25,2.692,26,0.033,27,0.044,28,0.033]],["title/modules/AppModule.html",[29,0.866,30,1.407]],["body/modules/AppModule.html",[2,1.08,3,0.663,4,0.557,5,0.557,11,0.061,16,1.151,17,0.663,20,0.663,21,0.374,26,0.029,27,0.04,28,0.029,29,1.256,30,2.516,31,0.92,32,1.08,33,1.512,34,1.512,35,1.08,36,2.108,37,1.512,38,1.834,39,1.834,40,2.041,41,2.041,42,2.108,43,1.512,44,1.512,45,2.323,46,2.108,47,2.323,48,1.834,49,2.323,50,2.323,51,2.323]],["title/injectables/AppService.html",[18,1.407,52,1.195]],["body/injectables/AppService.html",[3,0.829,4,0.696,5,0.696,7,0.696,8,2.06,9,2.874,11,0.06,12,1.35,14,1.59,15,2.06,16,0.829,17,0.829,18,2.06,20,0.829,21,0.468,24,1.59,26,0.036,27,0.046,28,0.036,52,1.749,53,1.891,54,2.293,55,2.904,56,2.293,57,2.904]],["title/modules/DatabaseModule.html",[29,0.866,40,1.195]],["body/modules/DatabaseModule.html",[3,0.73,4,0.613,5,0.613,11,0.062,16,0.987,17,0.73,20,0.73,21,0.412,26,0.031,27,0.043,28,0.031,29,1.166,31,1.012,40,1.607,46,1.664,58,2.557,59,2.019,60,1.188,61,2.557,62,2.557,63,2.557,64,2.557,65,2.557,66,2.557,67,2.557,68,3.458,69,2.019,70,2.557,71,3.094,72,2.557,73,2.557,74,2.019,75,2.557]],["title/classes/User.html",[21,0.414,76,1.018]],["body/classes/User.html",[3,0.439,4,0.369,5,0.369,7,0.369,10,2.57,11,0.061,12,1.835,15,2.425,16,0.682,20,0.836,21,0.248,26,0.019,27,0.029,28,0.019,60,0.715,71,3.497,76,1.16,77,1.539,78,0.843,79,2.39,80,2.929,81,2.929,82,1.907,83,1.604,84,1.907,85,2.313,86,1.907,87,1.897,88,2.39,89,4.429,90,1.539,91,1.539,92,1.539,93,3.302,94,1.215,95,2.39,96,2.39,97,1.539,98,1.539,99,2.39,100,1.539,101,1.539,102,1.539,103,1.887,104,1.539,105,2.39,106,1.002,107,0.843,108,1.539,109,1.539,110,1.539,111,1.539,112,1.215,113,0.843,114,1.215]],["title/controllers/UserController.html",[0,1.195,115,1.407]],["body/controllers/UserController.html",[0,0.744,2,0.744,3,0.457,4,0.383,5,0.719,7,0.383,8,1.348,9,2.194,10,1.954,11,0.061,12,1.395,14,1.643,15,2.37,16,0.962,17,0.457,20,0.457,21,0.258,22,1.263,23,1.042,24,1.348,26,0.02,27,0.03,28,0.02,56,1.263,76,0.634,82,2.194,83,1.348,84,2.194,85,1.263,86,2.194,87,0.744,107,0.876,115,1.348,116,1.263,117,1.6,118,2.462,119,3.035,120,2.37,121,2.661,122,1.263,123,3.002,124,1.6,125,1.6,126,1.263,127,1.263,128,2.462,129,1.6,130,1.944,131,1.6,132,1.263,133,1.263,134,2.462,135,1.6,136,1.189,137,1.263,138,1.6,139,1.6,140,1.263,141,1.263,142,1.6,143,1.6,144,1.6,145,1.6,146,1.263,147,1.6,148,1.6,149,1.6,150,1.6,151,1.6,152,1.6]],["title/modules/UserModule.html",[29,0.866,41,1.195]],["body/modules/UserModule.html",[2,1.409,3,0.604,4,0.507,5,0.507,11,0.061,16,1.169,17,0.604,20,0.604,21,0.341,26,0.026,27,0.037,28,0.026,29,1.194,31,0.838,32,0.984,33,1.378,34,1.378,35,0.984,36,2.306,37,2.306,41,2.039,42,1.974,43,1.378,44,1.378,46,1.378,59,1.672,60,0.984,76,0.838,83,1.159,103,1.672,113,1.66,115,1.939,136,1.877,137,1.672,153,1.672,154,1.672,155,1.672,156,2.117,157,2.117,158,1.672,159,2.117,160,2.117]],["title/injectables/UserService.html",[52,1.195,136,1.018]],["body/injectables/UserService.html",[3,0.525,4,0.441,5,0.783,7,0.441,8,1.498,11,0.061,12,1.519,14,1.498,16,1.033,17,0.525,20,0.525,21,0.296,23,1.197,24,1.498,26,0.023,27,0.034,28,0.023,52,1.272,53,1.197,60,0.855,74,2.16,76,0.728,82,1.781,83,1.498,84,1.781,86,1.781,87,0.855,94,1.452,106,1.197,107,1.007,112,1.452,119,3.201,120,2.16,121,2.857,122,2.16,126,2.16,127,2.16,130,2.857,132,1.452,133,1.452,136,1.083,158,1.452,161,1.452,162,1.839,163,3.618,164,1.839,165,2.736,166,1.839,167,1.839,168,1.839,169,1.839,170,1.839,171,1.839,172,1.839,173,1.839,174,1.452,175,1.839,176,1.839,177,1.839]],["title/coverage.html",[178,2.259]],["body/coverage.html",[0,1.628,1,1.696,5,0.625,6,2.058,11,0.059,18,1.427,21,0.42,26,0.032,27,0.043,28,0.032,35,1.211,52,1.628,54,2.058,76,1.032,78,1.918,87,1.211,113,1.427,115,1.427,116,2.058,136,1.032,161,2.058,174,2.058,178,1.696,179,2.606,180,2.606,181,2.606,182,4.645,183,3.503,184,3.503,185,2.606,186,2.606,187,3.503,188,2.058,189,2.606,190,2.606,191,2.606]],["title/dependencies.html",[32,1.432,192,2.164]],["body/dependencies.html",[11,0.062,17,0.764,26,0.033,27,0.044,28,0.033,32,1.243,48,2.112,60,1.243,106,1.741,140,2.112,141,2.814,193,4.009,194,2.675,195,2.675,196,2.675,197,2.675,198,2.675,199,2.675,200,2.675,201,2.675,202,2.675,203,2.675,204,2.675,205,2.675,206,2.675,207,2.675,208,2.675,209,2.675,210,2.675,211,2.675,212,2.675,213,2.675,214,2.675,215,2.675]],["title/miscellaneous/functions.html",[216,0.857,217,2.432]],["body/miscellaneous/functions.html",[7,0.863,11,0.053,26,0.044,27,0.053,28,0.044,35,2.138,188,2.842,216,1.425,217,2.842,218,3.599]],["title/index.html",[7,0.519,219,2.164,220,2.164]],["body/index.html",[4,0.495,11,0.059,26,0.025,27,0.037,28,0.025,69,2.757,178,1.343,221,2.063,222,2.063,223,2.977,224,2.063,225,2.063,226,2.063,227,2.063,228,2.063,229,2.063,230,2.063,231,2.063,232,2.063,233,2.063,234,2.063,235,4.353,236,2.063,237,2.063,238,2.063,239,4.223,240,2.063,241,2.063,242,2.977,243,2.063,244,2.063,245,2.063,246,2.063,247,2.977,248,2.977,249,2.063,250,2.063,251,2.063,252,2.977,253,2.977,254,2.063,255,2.063,256,2.063,257,2.063,258,2.063,259,1.629,260,2.063,261,2.063,262,2.063,263,2.063,264,2.063,265,2.063,266,2.063,267,2.063,268,2.063,269,2.063,270,2.063,271,2.063,272,2.063,273,2.063,274,2.063,275,2.063,276,2.063,277,2.063]],["title/modules.html",[31,1.374]],["body/modules.html",[11,0.051,26,0.042,27,0.051,28,0.042,30,1.855,31,1.342,40,1.575,41,1.575,259,3.274,278,4.147,279,4.147,280,4.481,281,3.389,282,3.389]],["title/overview.html",[283,2.74]],["body/overview.html",[2,1.211,11,0.056,21,0.42,26,0.032,27,0.043,28,0.032,29,0.878,30,2.489,31,1.032,32,1.211,33,1.696,34,1.696,35,1.211,36,1.696,37,1.696,38,2.058,39,2.058,40,1.839,41,2.113,42,2.28,43,1.696,44,1.696,53,1.696,136,1.839,146,2.058,153,2.058,154,2.058,155,2.058,283,2.058,284,2.606,285,3.503]],["title/miscellaneous/typealiases.html",[216,0.857,286,3.081]],["body/miscellaneous/typealiases.html",[7,0.863,11,0.053,26,0.044,27,0.053,28,0.044,78,1.97,87,1.673,107,2.354,216,1.425,287,3.599,288,2.842]],["title/miscellaneous/variables.html",[216,0.857,289,2.432]],["body/miscellaneous/variables.html",[7,0.84,11,0.056,26,0.043,27,0.052,28,0.043,78,1.919,113,2.317,114,2.768,216,1.388,288,2.768,289,2.768,290,3.506,291,3.506]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":146,"title":{},"body":{"controllers/UserController.html":{},"overview.html":{}}}],["1.0.0",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":285,"title":{},"body":{"overview.html":{}}}],["27017",{"_index":67,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["3",{"_index":284,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["5.12.15",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":260,"title":{},"body":{"index.html":{}}}],["app",{"_index":237,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":229,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":119,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":270,"title":{},"body":{"index.html":{}}}],["available",{"_index":282,"title":{},"body":{"modules.html":{}}}],["await",{"_index":150,"title":{},"body":{"controllers/UserController.html":{}}}],["backers",{"_index":261,"title":{},"body":{"index.html":{}}}],["birthdate",{"_index":80,"title":{},"body":{"classes/User.html":{}}}],["blank",{"_index":111,"title":{},"body":{"classes/User.html":{}}}],["body",{"_index":132,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body('email",{"_index":148,"title":{},"body":{"controllers/UserController.html":{}}}],["body('password",{"_index":149,"title":{},"body":{"controllers/UserController.html":{}}}],["body('username",{"_index":147,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":81,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":280,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":278,"title":{},"body":{"modules.html":{}}}],["building",{"_index":224,"title":{},"body":{"index.html":{}}}],["can't",{"_index":110,"title":{},"body":{"classes/User.html":{}}}],["class",{"_index":21,"title":{"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":77,"title":{},"body":{"classes/User.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":153,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":154,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":155,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["components/user/user.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('body",{"_index":172,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('databasemodule",{"_index":75,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["console.log('file",{"_index":171,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":112,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":74,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":162,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/users",{"_index":142,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":178,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":120,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(file",{"_index":122,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createdcat",{"_index":173,"title":{},"body":{"injectables/UserService.html":{}}}],["createdcat.save",{"_index":176,"title":{},"body":{"injectables/UserService.html":{}}}],["createindexes",{"_index":95,"title":{},"body":{"classes/User.html":{}}}],["d",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["database/database.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["database/schema",{"_index":158,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["database/schema/user.schema",{"_index":138,"title":{},"body":{"controllers/UserController.html":{}}}],["databasemodule",{"_index":40,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":88,"title":{},"body":{"classes/User.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":230,"title":{},"body":{"index.html":{}}}],["development",{"_index":238,"title":{},"body":{"index.html":{}}}],["document",{"_index":105,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":179,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":249,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":225,"title":{},"body":{"index.html":{}}}],["email",{"_index":82,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":141,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":123,"title":{},"body":{"controllers/UserController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filefieldsinterceptor",{"_index":139,"title":{},"body":{"controllers/UserController.html":{}}}],["findall",{"_index":121,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":223,"title":{},"body":{"index.html":{}}}],["function",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":217,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":128,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["getting",{"_index":219,"title":{"index.html":{}},"body":{}}],["graph",{"_index":281,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":256,"title":{},"body":{"index.html":{}}}],["hello",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["helmet",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":267,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":274,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":52,"title":{"injectables/AppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":168,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(user.name",{"_index":169,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":234,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":236,"title":{},"body":{"index.html":{}}}],["join",{"_index":263,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":271,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":277,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":253,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":65,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["lowercase",{"_index":109,"title":{},"body":{"classes/User.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxcount",{"_index":145,"title":{},"body":{"controllers/UserController.html":{}}}],["metadata",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":216,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":252,"title":{},"body":{"index.html":{}}}],["mode",{"_index":242,"title":{},"body":{"index.html":{}}}],["model",{"_index":163,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb://${process.env.database_url",{"_index":64,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":106,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":59,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":159,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":61,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":266,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":272,"title":{},"body":{"index.html":{}}}],["name",{"_index":83,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":69,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["nestframework",{"_index":276,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":60,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":140,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":174,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":222,"title":{},"body":{"index.html":{}}}],["npm",{"_index":235,"title":{},"body":{"index.html":{}}}],["open",{"_index":254,"title":{},"body":{"index.html":{}}}],["optional",{"_index":127,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":283,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":192,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":126,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password",{"_index":84,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["picture",{"_index":85,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{}}}],["please",{"_index":264,"title":{},"body":{"index.html":{}}}],["post",{"_index":133,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["post('signup",{"_index":143,"title":{},"body":{"controllers/UserController.html":{}}}],["post('signup')@useinterceptors(undefined",{"_index":124,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":117,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":170,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.database",{"_index":68,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.database_port",{"_index":66,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["production",{"_index":244,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":221,"title":{},"body":{"index.html":{}}}],["project",{"_index":255,"title":{},"body":{"index.html":{}}}],["promise",{"_index":130,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":89,"title":{},"body":{"classes/User.html":{}}}],["prop({lowercase",{"_index":92,"title":{},"body":{"classes/User.html":{}}}],["prop({required",{"_index":99,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":79,"title":{},"body":{"classes/User.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["read",{"_index":265,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":233,"title":{},"body":{"index.html":{}}}],["required",{"_index":93,"title":{},"body":{"classes/User.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":239,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":226,"title":{},"body":{"index.html":{}}}],["schema",{"_index":103,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":104,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":114,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":227,"title":{},"body":{"index.html":{}}}],["side",{"_index":228,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":258,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":288,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["src/components/user/user.controller.ts",{"_index":116,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/components/user/user.controller.ts:18",{"_index":131,"title":{},"body":{"controllers/UserController.html":{}}}],["src/components/user/user.controller.ts:24",{"_index":125,"title":{},"body":{"controllers/UserController.html":{}}}],["src/components/user/user.controller.ts:34",{"_index":129,"title":{},"body":{"controllers/UserController.html":{}}}],["src/components/user/user.module.ts",{"_index":156,"title":{},"body":{"modules/UserModule.html":{}}}],["src/components/user/user.service.ts",{"_index":161,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/components/user/user.service.ts:12",{"_index":166,"title":{},"body":{"injectables/UserService.html":{}}}],["src/components/user/user.service.ts:19",{"_index":167,"title":{},"body":{"injectables/UserService.html":{}}}],["src/components/user/user.service.ts:7",{"_index":164,"title":{},"body":{"injectables/UserService.html":{}}}],["src/database/database.module.ts",{"_index":58,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/schema/user.schema.ts",{"_index":78,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/schema/user.schema.ts:12",{"_index":102,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:20",{"_index":97,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:23",{"_index":100,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:26",{"_index":101,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:29",{"_index":90,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:32",{"_index":91,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:9",{"_index":98,"title":{},"body":{"classes/User.html":{}}}],["src/main.ts",{"_index":188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":240,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":243,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":245,"title":{},"body":{"index.html":{}}}],["started",{"_index":220,"title":{"index.html":{}},"body":{}}],["starter",{"_index":232,"title":{},"body":{"index.html":{}}}],["statements",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":268,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["support",{"_index":259,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":279,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":248,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":251,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":250,"title":{},"body":{"index.html":{}}}],["tests",{"_index":247,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":257,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.usermodel",{"_index":175,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":177,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(file",{"_index":151,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":152,"title":{},"body":{"controllers/UserController.html":{}}}],["timestamps",{"_index":108,"title":{},"body":{"classes/User.html":{}}}],["touch",{"_index":269,"title":{},"body":{"index.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/User.html":{}}}],["twitter",{"_index":275,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":286,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/multer",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":231,"title":{},"body":{"index.html":{}}}],["ui",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":94,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":96,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":246,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":134,"title":{},"body":{"controllers/UserController.html":{}}}],["uri",{"_index":63,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usecreateindex",{"_index":70,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usefactory",{"_index":62,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["useinterceptors",{"_index":135,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(filefieldsinterceptor",{"_index":144,"title":{},"body":{"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":73,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":76,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":157,"title":{},"body":{"modules/UserModule.html":{}}}],["user.name",{"_index":160,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":137,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":115,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":107,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":165,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":41,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":86,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["users",{"_index":118,"title":{},"body":{"controllers/UserController.html":{}}}],["userschema",{"_index":113,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":136,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":72,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["value",{"_index":291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":289,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":241,"title":{},"body":{"index.html":{}}}],["website",{"_index":273,"title":{},"body":{"index.html":{}}}],["world",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":262,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './database/database.module';\nimport { UserModule } from './components/user/user.module';\n\n@Module({\n  imports: [ConfigModule.forRoot(), DatabaseModule, UserModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useFactory: () => ({\n        uri: `mongodb://${process.env.DATABASE_URL || 'localhost'}:${\n          process.env.DATABASE_PORT || 27017\n        }/${process.env.DATABASE || 'nest'}`,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n        useNewUrlParser: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {\n  constructor() {\n    console.log('DatabaseModule', process.env.DATABASE);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/schema/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthdate\n                            \n                            \n                                breed\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                picture\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: undefined, createIndexes: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type UserDocument = User & Document;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ required: true })\n  username: string;\n\n  @Prop({\n    lowercase: true,\n    required: [true, \"can't be blank\"],\n    createIndexes: true,\n    unique: true,\n  })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  picture: string;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  breed: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file: Express.Multer.File[], username: string, email: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/components/user/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/user/user.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/user/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\n// import { User, UserDocument } from '../../database/schema/user.schema';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\n\n@Controller('/users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  getHello() {\n    return 'Hello from users';\n  }\n\n  @Post('signup')\n  @UseInterceptors(FileFieldsInterceptor([{ name: 'picture', maxCount: 1 }]))\n  async create(\n    @UploadedFile() file: Express.Multer.File[],\n    @Body('username') username: string,\n    @Body('email') email: string,\n    @Body('password') password: string,\n  ) {\n    await this.userService.create(file, { username, email, password });\n  }\n\n  @Get(':id')\n  async findAll(): Promise {\n    return this.userService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserService } from './user.service';\nimport { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { User, UserSchema } from '../../database/schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/components/user/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file, undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/components/user/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Post, Get, Body } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from '../../database/schema';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  async create(file, { username, email, password }): Promise {\n    console.log('file', file);\n    console.log('body', { username, email, password });\n    const createdCat = new this.userModel();\n    return createdCat.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/database/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.1\n        \n            @types/multer : ^1.4.6\n        \n            D : ^1.0.0\n        \n            helmet : ^4.6.0\n        \n            mongoose : ^5.12.15\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
