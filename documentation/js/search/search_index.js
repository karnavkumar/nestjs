var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.016,1,2.252]],["body/classes/AllExceptionsFilter.html",[0,0.018,1,3.304,2,1.495,3,0.37,4,0.32,5,0.32,6,3.814,7,2.908,8,2.367,9,5.119,10,0.478,11,1.64,12,3.914,13,4.588,14,5.119,15,5.434,16,5.434,17,0.728,18,3.498,19,1.251,20,0.033,21,0.96,22,0.596,23,1.251,24,2.908,25,1.251,26,3.498,27,0.485,28,0.661,29,2.229,30,0.37,31,3.498,32,0.019,33,0.025,34,0.019]],["title/controllers/AppController.html",[35,1.785,36,1.993]],["body/controllers/AppController.html",[0,0.014,3,0.285,4,0.246,5,0.246,10,0.368,11,1.372,17,0.799,19,1.372,20,0.034,21,1.053,22,0.459,23,1.372,25,1.372,27,0.583,28,0.509,30,0.285,32,0.014,33,0.021,34,0.014,35,2.191,36,2.446,37,1.263,38,2.24,39,3.838,40,2.305,41,3.19,42,2.695,43,1.64,44,2.695,45,2.695,46,4.87,47,2.695,48,3.143,49,2.695,50,2.695,51,2.764,52,2.24,53,2.695,54,2.695,55,3.838,56,1.39,57,2.094,58,2.695,59,2.695,60,2.24,61,2.446,62,2.695,63,1.941,64,1.539,65,2.24,66,3.19,67,1.717,68,2.695,69,1.717,70,2.695,71,2.695,72,2.695,73,1.372,74,2.695,75,2.695,76,2.695,77,2.695,78,2.695]],["title/modules/AppModule.html",[79,0.858,80,1.993]],["body/modules/AppModule.html",[0,0.013,3,0.274,4,0.237,5,0.237,20,0.034,27,0.6,28,0.489,29,1.65,30,0.274,32,0.014,33,0.02,34,0.014,36,2.785,37,1.748,64,2.129,65,2.153,66,2.153,79,1.2,80,3.754,81,1.106,82,1.213,83,1.479,84,1.479,85,1.213,86,2.129,87,1.479,88,2.153,89,2.153,90,3.014,91,3.014,92,2.723,93,3.014,94,2.129,95,1.479,96,1.479,97,2.589,98,2.129,99,3.729,100,2.589,101,2.153,102,3.729,103,3.729,104,2.589,105,2.589,106,1.865,107,1.336,108,2.153,109,2.589,110,2.589,111,2.589,112,3.729,113,3.729]],["title/injectables/AppService.html",[114,0.59,115,2.252]],["body/injectables/AppService.html",[0,0.021,3,0.421,4,0.364,5,0.364,10,0.543,11,1.78,17,0.828,20,0.033,25,1.422,27,0.421,28,0.751,30,0.421,32,0.021,33,0.027,34,0.021,73,1.422,114,0.94,115,3.587,116,1.553,117,3.306,118,4.739,119,3.977,120,1.631,121,3.306,122,3.977]],["title/modules/AuthModule.html",[79,0.858,90,1.785]],["body/modules/AuthModule.html",[0,0.013,3,0.274,4,0.237,5,0.237,20,0.034,27,0.589,28,0.489,30,0.274,32,0.014,33,0.02,34,0.014,37,1.213,57,2.76,79,1.2,81,1.106,82,1.213,83,1.479,84,1.479,85,1.213,86,2.496,87,2.496,90,3.394,92,2.723,94,2.129,95,1.479,96,1.479,98,2.129,106,1.865,107,1.336,108,2.153,123,2.153,124,2.589,125,2.153,126,2.153,127,3.014,128,3.014,129,2.589,130,3.729,131,1.865,132,4.371,133,1.213,134,2.153,135,1.65,136,2.153,137,2.589,138,2.589,139,2.589,140,2.153,141,2.153,142,2.589,143,2.589,144,2.589]],["title/injectables/AuthService.html",[57,1.465,114,0.59]],["body/injectables/AuthService.html",[0,0.011,3,0.232,4,0.2,5,0.2,8,1.13,10,0.299,11,1.179,12,1.578,17,0.826,19,1.418,20,0.034,21,1.089,22,0.562,23,1.418,25,1.179,27,0.546,28,0.414,30,0.232,32,0.012,33,0.018,34,0.012,40,2.565,41,3.297,57,1.545,73,1.418,106,1.578,107,1.13,114,0.623,116,0.856,120,1.628,131,1.578,133,1.027,145,1.822,146,3.298,147,1.545,148,2.192,149,2.565,150,5.159,151,2.192,152,2.192,153,2.192,154,3.298,155,2.217,156,2.192,157,2.217,158,2.102,159,1.578,160,2.192,161,1.578,162,1.578,163,1.397,164,1.578,165,1.822,166,1.577,167,1.822,168,1.578,169,2.375,170,1.397,171,1.397,172,2.192,173,2.192,174,2.192,175,1.822,176,1.251,177,2.102,178,2.192,179,3.298,180,2.192,181,2.192,182,1.822,183,2.192,184,2.742,185,1.409,186,2.192,187,2.192,188,1.822]],["title/modules/DatabaseModule.html",[79,0.858,91,1.785]],["body/modules/DatabaseModule.html",[0,0.019,3,0.381,4,0.329,5,0.329,20,0.034,27,0.495,28,0.68,30,0.381,32,0.019,33,0.025,34,0.019,79,1.284,81,1.539,91,2.67,98,2.057,147,1.688,189,3.602,190,2.595,191,1.688,192,3.602,193,3.602,194,3.602,195,3.602,196,3.602,197,3.602,198,3.602,199,4.676,200,2.995,201,3.602,202,3.309,203,3.602,204,3.602,205,3.602]],["title/injectables/JwtAuthGuard.html",[64,1.785,114,0.59]],["body/injectables/JwtAuthGuard.html",[0,0.013,3,0.535,4,0.235,5,0.235,8,1.326,10,0.351,11,1.326,17,0.907,19,1.556,20,0.034,21,1.195,22,0.632,23,1.556,24,2.137,25,1.326,27,0.504,28,0.485,29,1.638,30,0.272,32,0.014,33,0.02,34,0.014,63,1.852,64,2.119,69,1.638,73,1.556,114,0.701,116,1.004,133,1.205,147,1.205,166,1.807,171,1.638,176,1.468,202,1.638,206,3.962,207,1.852,208,3.71,209,3.71,210,2.571,211,5.266,212,2.571,213,3.71,214,4.766,215,2.571,216,2.571,217,3.71,218,2.571,219,4.766,220,3.085,221,2.137,222,1.852,223,2.571,224,3.085,225,2.571,226,2.571,227,2.571,228,2.571,229,3.085,230,2.571,231,2.571,232,1.638]],["title/injectables/JwtStrategy.html",[114,0.59,127,1.785]],["body/injectables/JwtStrategy.html",[0,0.017,3,0.336,4,0.291,5,0.291,8,1.639,10,0.434,11,1.538,17,0.896,19,1.136,20,0.034,21,0.872,22,0.542,23,1.136,25,1.136,27,0.553,28,0.6,30,0.336,32,0.017,33,0.023,34,0.017,40,2.517,73,1.136,114,0.812,116,1.241,127,2.457,133,1.489,135,2.025,136,2.642,141,2.642,147,2.286,159,2.289,162,2.289,163,2.025,168,2.289,171,2.025,185,1.358,188,3.577,233,2.642,234,3.099,235,3.178,236,4.303,237,3.178,238,3.178,239,2.642,240,3.178,241,3.178,242,3.178,243,2.289,244,3.178,245,3.178,246,3.178]],["title/injectables/LocalAuthGuard.html",[67,1.993,114,0.59]],["body/injectables/LocalAuthGuard.html",[0,0.022,3,0.448,4,0.387,5,0.387,8,2.182,20,0.033,27,0.548,28,0.799,30,0.448,32,0.023,33,0.028,34,0.023,67,3.298,114,0.977,116,1.652,133,1.983,207,3.047,221,3.517,247,3.517,248,4.231]],["title/injectables/LocalStrategy.html",[114,0.59,128,1.785]],["body/injectables/LocalStrategy.html",[0,0.015,3,0.297,4,0.257,5,0.257,8,1.449,10,0.384,11,1.413,17,0.823,19,1.413,20,0.034,21,1.085,22,0.674,23,1.413,25,1.004,27,0.553,28,0.53,30,0.297,32,0.015,33,0.021,34,0.015,40,2.359,48,1.604,57,2.541,60,2.336,69,1.79,73,1.004,114,0.746,116,1.097,120,1.776,128,2.257,133,1.316,134,2.336,147,1.316,155,2.45,158,2.519,159,2.023,162,2.023,163,1.79,164,2.023,166,1.634,168,2.023,171,1.79,176,1.604,177,1.79,185,1.689,220,3.286,229,2.336,232,1.79,234,2.847,249,2.336,250,2.809,251,2.809,252,3.952,253,2.809,254,2.809,255,2.336,256,2.809]],["title/classes/LoginUserDto.html",[0,0.016,257,2.252]],["body/classes/LoginUserDto.html",[0,0.025,2,1.57,3,0.389,4,0.336,5,0.336,10,0.502,17,0.986,20,0.033,22,0.807,27,0.389,30,0.389,32,0.02,33,0.025,34,0.02,43,2.024,120,1.813,155,2.456,157,2.456,257,3.412,258,4.358,259,2.647,260,2.444,261,3.341,262,3.675,263,3.412,264,3.675,265,2.647,266,2.098]],["title/classes/ProfileDto.html",[0,0.016,267,2.252]],["body/classes/ProfileDto.html",[0,0.025,2,1.594,3,0.395,4,0.341,5,0.341,10,0.51,17,0.996,20,0.033,22,0.815,27,0.395,30,0.395,32,0.02,33,0.026,34,0.02,43,2.044,120,1.824,184,4.39,185,2.256,260,2.468,261,3.365,266,2.131,267,3.446,268,3.102,269,5.28,270,3.732,271,3.732]],["title/classes/SignUpUserDto.html",[0,0.016,272,1.993]],["body/classes/SignUpUserDto.html",[0,0.019,2,1.047,3,0.259,4,0.224,5,0.224,10,0.335,17,1.114,20,0.033,22,0.953,27,0.379,30,0.259,32,0.013,33,0.019,34,0.013,43,2.285,56,1.264,120,1.908,155,1.984,157,1.984,185,1.809,243,3.73,259,1.764,260,1.848,261,2.699,263,2.58,265,1.764,266,1.399,272,2.283,273,4.559,274,3.05,275,3.05,276,3.05,277,3.05,278,2.978,279,4.235,280,2.45,281,2.45,282,2.45,283,2.45,284,3.583,285,2.45,286,2.45,287,2.978,288,2.978,289,2.45,290,4.235,291,2.45,292,3.356,293,3.583,294,2.45,295,2.45,296,3.521]],["title/classes/UploadProfileDto.html",[0,0.016,297,2.252]],["body/classes/UploadProfileDto.html",[0,0.02,2,1.654,3,0.41,4,0.354,5,0.516,10,0.529,17,0.806,20,0.033,22,0.835,27,0.41,30,0.41,32,0.021,33,0.026,34,0.021,43,1.654,56,1.997,120,1.603,260,2.526,287,4.071,288,4.071,292,3.527,297,3.527,298,4.071,299,3.218,300,3.871,301,3.871]],["title/classes/User.html",[0,0.016,166,1.118]],["body/classes/User.html",[0,0.01,2,0.814,3,0.202,4,0.174,5,0.174,10,0.405,17,1.11,20,0.034,21,0.998,22,0.94,27,0.313,30,0.385,32,0.01,33,0.016,34,0.01,43,2.278,73,0.681,120,1.87,155,1.703,157,2.082,166,1.3,176,1.088,185,1.553,191,0.892,202,3.603,234,2.134,243,2.134,260,1.528,274,2.618,275,2.618,276,2.618,277,2.618,278,2.463,296,3.694,302,1.088,303,3.635,304,3.635,305,5.763,306,1.905,307,1.905,308,1.905,309,3.635,310,1.905,311,1.905,312,2.962,313,2.962,314,2.962,315,1.905,316,2.962,317,1.905,318,1.905,319,2.962,320,1.905,321,1.905,322,2.962,323,1.905,324,1.905,325,1.905,326,1.905,327,2.134,328,2.962,329,1.905,330,1.214,331,1.214,332,1.905,333,1.372,334,1.583,335,1.905,336,1.905,337,2.962,338,1.905,339,1.583,340,1.583,341,1.583,342,1.905,343,1.905,344,1.905,345,1.905,346,1.905,347,1.905,348,1.088,349,1.583]],["title/controllers/UserController.html",[35,1.785,350,1.993]],["body/controllers/UserController.html",[0,0.013,3,0.257,4,0.222,5,0.222,10,0.331,11,1.271,12,1.747,17,0.877,19,0.867,20,0.034,21,0.666,22,0.413,23,0.867,25,1.505,27,0.546,28,0.458,30,0.257,32,0.013,33,0.019,34,0.013,35,1.385,37,1.136,40,2.662,43,1.799,51,2.561,52,2.016,56,1.251,61,2.266,63,1.747,69,1.546,73,1.505,118,3.855,120,0.794,121,2.016,158,2.266,170,1.546,175,2.016,177,1.546,182,2.016,272,3.288,277,3.556,350,2.266,351,2.016,352,2.425,353,3.556,354,3.5,355,3.855,356,2.425,357,4.211,358,2.425,359,3.556,360,2.425,361,3.556,362,2.425,363,2.425,364,3.556,365,2.425,366,2.172,367,2.016,368,2.425,369,2.016,370,2.016,371,2.425,372,2.425,373,2.425,374,1.747,375,2.425,376,2.425,377,2.425,378,2.425,379,2.425,380,2.425,381,2.425,382,2.425]],["title/classes/UserLoginDto.html",[0,0.016,48,1.785]],["body/classes/UserLoginDto.html",[0,0.023,2,1.46,3,0.362,4,0.312,5,0.312,10,0.467,17,0.941,20,0.033,22,0.77,27,0.478,30,0.362,32,0.018,33,0.024,34,0.018,43,1.93,48,2.579,56,1.762,120,1.763,155,2.371,185,2.162,260,2.33,261,2.878,263,2.461,265,2.461,266,1.951,292,3.644,383,4.206,384,2.84,385,4.517,386,3.416,387,3.416,388,3.416,389,3.416,390,3.755,391,3.416,392,3.416]],["title/modules/UserLoginModule.html",[79,0.858,92,1.613]],["body/modules/UserLoginModule.html",[0,0.016,3,0.333,4,0.288,5,0.288,20,0.034,21,0.865,27,0.551,28,0.595,30,0.333,32,0.017,33,0.023,34,0.017,37,1.476,79,1.333,81,1.346,82,1.476,83,1.799,84,1.799,85,1.476,86,2.773,87,2.773,92,2.965,94,2.442,95,1.799,96,1.799,98,1.799,107,1.625,149,3.145,165,2.619,166,1.529,167,2.619,190,2.269,191,1.476,327,2.269,348,2.442,393,2.619,394,2.619,395,2.619,396,2.269,397,3.15,398,2.619,399,2.619]],["title/injectables/UserLoginService.html",[114,0.59,149,1.613]],["body/injectables/UserLoginService.html",[0,0.017,3,0.336,4,0.291,5,0.291,10,0.434,11,1.538,17,0.896,19,1.538,20,0.034,21,1.181,22,0.542,23,1.538,25,1.136,27,0.553,28,0.6,30,0.336,32,0.017,33,0.023,34,0.017,73,1.136,107,2.517,114,0.812,116,1.241,147,2.016,149,2.22,157,2.016,166,1.136,169,2.289,170,2.025,191,1.489,330,2.025,331,2.025,396,3.514,400,2.642,401,3.577,402,2.642,403,4.347,404,3.178,405,3.577,406,3.577,407,3.178,408,2.642,409,2.289,410,2.642,411,2.642]],["title/modules/UserModule.html",[79,0.858,93,1.785]],["body/modules/UserModule.html",[0,0.016,3,0.328,4,0.283,5,0.283,20,0.034,21,0.85,27,0.573,28,0.585,30,0.328,32,0.017,33,0.023,34,0.017,37,1.981,79,1.322,81,1.323,82,1.451,83,1.768,84,1.768,85,1.451,86,2.749,87,2.749,93,3.267,94,2.414,95,1.768,96,1.768,98,1.768,166,1.107,190,2.23,191,1.451,327,2.23,348,2.414,350,3.068,366,3.136,367,2.574,398,2.574,399,2.574,409,2.23,412,2.574,413,2.574,414,2.574,415,3.096,416,3.096]],["title/injectables/UserService.html",[114,0.59,366,1.613]],["body/injectables/UserService.html",[0,0.012,3,0.248,4,0.215,5,0.446,10,0.321,11,1.241,17,0.95,19,1.477,20,0.034,21,1.134,22,0.4,23,1.477,25,1.477,27,0.515,28,0.443,30,0.248,32,0.013,33,0.019,34,0.013,40,2.631,51,1.69,73,1.477,114,0.655,116,0.917,147,1.627,155,2.139,157,2.283,158,2.909,161,1.69,166,0.839,169,1.69,170,1.496,176,1.34,177,1.496,185,1.765,191,1.1,232,1.496,255,1.951,274,2.975,275,2.975,276,2.975,330,1.496,331,1.496,354,3.434,355,3.795,366,1.791,401,2.886,402,1.951,403,3.795,405,2.886,406,2.886,408,1.951,409,1.69,410,1.951,411,1.951,417,1.951,418,2.347,419,2.347,420,2.347,421,2.347,422,2.347,423,2.347,424,2.347,425,2.347,426,1.951,427,2.347,428,2.347,429,2.347,430,2.347,431,2.347]],["title/coverage.html",[432,3.066]],["body/coverage.html",[0,0.027,1,1.68,5,0.213,6,1.939,7,1.939,20,0.033,22,0.398,32,0.013,33,0.019,34,0.013,35,1.973,36,1.486,38,1.939,48,1.332,57,1.093,61,1.486,64,1.332,67,1.486,79,0.64,85,1.093,107,1.203,114,1.021,115,1.68,117,1.939,127,1.332,128,1.332,135,1.486,145,1.939,149,1.203,166,0.834,206,1.939,207,2.488,222,1.68,232,1.486,233,1.939,247,1.939,249,1.939,257,1.68,258,1.939,259,2.488,267,1.68,268,1.939,272,1.486,273,1.939,297,1.68,298,1.939,299,1.939,302,2.35,333,1.68,340,2.872,348,1.332,350,1.486,351,1.939,366,1.203,374,2.488,383,1.939,384,1.939,396,1.68,400,1.939,417,1.939,432,1.68,433,2.332,434,2.332,435,2.332,436,6.184,437,4.115,438,5.266,439,4.115,440,1.939,441,4.858,442,5.408,443,2.872,444,2.332,445,2.332,446,2.332,447,2.488,448,2.332,449,2.332]],["title/dependencies.html",[82,1.761,450,2.617]],["body/dependencies.html",[0,0.023,20,0.034,28,0.616,29,2.079,32,0.018,33,0.024,34,0.018,56,1.683,82,1.529,101,2.713,131,2.35,133,1.529,161,2.35,163,3.151,164,2.35,191,1.529,239,2.713,266,1.863,330,2.079,369,2.713,370,3.642,451,4.945,452,3.263,453,3.263,454,3.263,455,3.263,456,3.263,457,3.263,458,3.263,459,3.263,460,3.263,461,3.263,462,3.263,463,3.263,464,3.263,465,3.263,466,3.263,467,3.263,468,3.263,469,3.263,470,3.263,471,3.263,472,3.263,473,3.263,474,3.263,475,3.263,476,3.263,477,3.263,478,3.263,479,3.263,480,3.263]],["title/miscellaneous/functions.html",[481,1.35,482,3.124]],["body/miscellaneous/functions.html",[10,0.599,19,1.567,20,0.03,21,1.203,23,1.567,32,0.024,33,0.028,34,0.024,85,2.661,157,2.054,302,2.503,333,3.809,341,3.644,447,3.157,481,2.261,482,3.644,483,3.644,484,3.157]],["title/index.html",[10,0.357,485,2.617,486,2.617]],["body/index.html",[4,0.277,20,0.033,32,0.016,33,0.022,34,0.016,200,3.959,334,2.52,390,2.52,432,2.184,487,3.032,488,3.032,489,4.167,490,3.032,491,3.032,492,3.032,493,3.032,494,3.032,495,3.032,496,3.032,497,3.032,498,3.032,499,3.032,500,5.689,501,3.032,502,3.032,503,3.032,504,5.554,505,3.032,506,3.032,507,4.167,508,3.032,509,3.032,510,3.032,511,3.032,512,4.167,513,4.167,514,3.032,515,3.032,516,3.032,517,4.167,518,4.167,519,3.032,520,3.032,521,3.032,522,3.032,523,3.032,524,2.52,525,3.032,526,3.032,527,3.032,528,3.032,529,3.032,530,3.032,531,3.032,532,3.032,533,3.032,534,3.032,535,3.032,536,3.032,537,3.032,538,3.032,539,3.032,540,3.032,541,3.032]],["title/modules.html",[81,1.818]],["body/modules.html",[20,0.028,32,0.023,33,0.028,34,0.023,80,2.681,81,1.797,90,2.402,91,2.402,92,2.17,93,2.402,524,4.833,542,5.814,543,5.814,544,5.966,545,4.206,546,4.206]],["title/overview.html",[547,3.538]],["body/overview.html",[2,1.21,20,0.033,32,0.015,33,0.021,34,0.015,37,1.327,57,2.616,79,0.777,80,3.74,81,1.21,82,1.327,83,1.617,84,1.617,85,1.327,86,1.617,87,1.617,88,2.354,89,2.354,90,3.419,91,2.622,92,2.88,93,3.104,94,2.269,95,1.617,96,1.617,116,1.106,123,2.354,125,2.354,126,2.354,127,2.622,128,2.622,149,2.88,366,2.88,393,2.354,394,2.354,395,2.354,412,2.354,413,2.354,414,2.354,426,2.354,547,2.354,548,2.831,549,2.831,550,2.831]],["title/miscellaneous/typealiases.html",[481,1.35,551,3.758]],["body/miscellaneous/typealiases.html",[10,0.637,20,0.029,22,0.795,32,0.025,33,0.029,34,0.025,302,2.664,331,3.497,481,2.406,484,3.36,552,4.665]],["title/miscellaneous/variables.html",[481,1.35,553,3.124]],["body/miscellaneous/variables.html",[10,0.49,20,0.034,22,0.883,32,0.019,33,0.025,34,0.019,61,2.97,79,1.28,120,1.174,135,2.97,140,2.98,202,2.284,222,3.357,224,2.98,302,2.047,339,4.56,348,2.662,349,2.98,374,2.582,440,2.98,443,4.306,447,2.582,481,1.849,483,2.98,484,2.582,553,2.98,554,4.661,555,3.585,556,5.485,557,3.585,558,3.585,559,3.585]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":284,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["2",{"_index":426,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["27017",{"_index":198,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["3.0.2",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":548,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["5.12.15",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":550,"title":{},"body":{"overview.html":{}}}],["7.1.6",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":549,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"classes/ProfileDto.html":{}}}],["access_token",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":337,"title":{},"body":{"classes/User.html":{}}}],["aliases",{"_index":552,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":525,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["apiconsumes",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes('multipart/form",{"_index":378,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":292,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty({description",{"_index":385,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["apiproperty({required",{"_index":279,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["apiproperty({type",{"_index":300,"title":{},"body":{"classes/UploadProfileDto.html":{}}}],["app",{"_index":502,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":36,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":495,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":80,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":115,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["arguments",{"_index":231,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth.guard",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":207,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":212,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":215,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:26",{"_index":218,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/dto/user",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/is",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["auth/local",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":221,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":223,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":248,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":90,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":534,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":57,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":546,"title":{},"body":{"modules.html":{}}}],["await",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":526,"title":{},"body":{"index.html":{}}}],["based",{"_index":230,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["baseexceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["bcrypt",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["binary",{"_index":288,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{}}}],["birthdate",{"_index":274,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["body",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":316,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":303,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":544,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":542,"title":{},"body":{"modules.html":{}}}],["building",{"_index":490,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":208,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":213,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_userloginmodule",{"_index":393,"title":{},"body":{"modules/UserLoginModule.html":{},"overview.html":{}}}],["cluster_userloginmodule_exports",{"_index":394,"title":{},"body":{"modules/UserLoginModule.html":{},"overview.html":{}}}],["cluster_userloginmodule_providers",{"_index":395,"title":{},"body":{"modules/UserLoginModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":412,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":413,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":414,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compare",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(password",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["components/user",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["components/user/user.module",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":255,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["console.log('databasemodule",{"_index":205,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["console.log('here",{"_index":379,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log('userlogindto",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":250,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":210,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(userloginservice",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(usermodel",{"_index":402,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["context",{"_index":216,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.getclass",{"_index":227,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":226,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":35,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/users",{"_index":375,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["country",{"_index":275,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["coverage",{"_index":432,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":354,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(signupuserdto",{"_index":356,"title":{},"body":{"controllers/UserController.html":{}}}],["create(undefined",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.save",{"_index":430,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.set",{"_index":429,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":359,"title":{},"body":{"controllers/UserController.html":{}}}],["database/database.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["database/schema",{"_index":409,"title":{},"body":{"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["database/schema/user.schema",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserLoginModule.html":{}}}],["databasemodule",{"_index":91,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":278,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/User.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":339,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":390,"title":{},"body":{"classes/UserLoginDto.html":{},"index.html":{}}}],["development",{"_index":503,"title":{},"body":{"index.html":{}}}],["document",{"_index":328,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["dto/signup",{"_index":371,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/user",{"_index":254,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["e2e",{"_index":514,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":491,"title":{},"body":{"index.html":{}}}],["email",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"classes/SignUpUserDto.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["err",{"_index":219,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["error.message",{"_index":381,"title":{},"body":{"controllers/UserController.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtAuthGuard.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:6",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["executioncontext",{"_index":214,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":370,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":357,"title":{},"body":{"controllers/UserController.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":243,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/SignUpUserDto.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":368,"title":{},"body":{"controllers/UserController.html":{}}}],["fill",{"_index":335,"title":{},"body":{"classes/User.html":{}}}],["findall",{"_index":355,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finduser",{"_index":401,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["finduser(email",{"_index":406,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["format",{"_index":287,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{}}}],["framework",{"_index":489,"title":{},"body":{"index.html":{}}}],["function",{"_index":340,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":482,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":361,"title":{},"body":{"controllers/UserController.html":{}}}],["get('profile",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["getprofile",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":485,"title":{"index.html":{}},"body":{}}],["graph",{"_index":545,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":521,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":209,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":217,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(password",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["helmet",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":531,"title":{},"body":{"index.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":538,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":114,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":408,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["injectmodel(user.name",{"_index":410,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":499,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":501,"title":{},"body":{"index.html":{}}}],["is_deleted",{"_index":304,"title":{},"body":{"classes/User.html":{}}}],["is_public_key",{"_index":222,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":261,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ismongoid",{"_index":269,"title":{},"body":{"classes/ProfileDto.html":{}}}],["isnotempty",{"_index":290,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["isnumberstring",{"_index":293,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["isnumberstring()@length(10",{"_index":283,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["ispublic",{"_index":224,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":528,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":239,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":64,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":127,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":535,"title":{},"body":{"index.html":{}}}],["legend",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":294,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["length(10",{"_index":295,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["license",{"_index":541,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":518,"title":{},"body":{"index.html":{}}}],["local",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":67,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":196,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["localstrategy",{"_index":128,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["login(undefined",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["login.dto.ts",{"_index":384,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:15",{"_index":387,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:9",{"_index":389,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["login.module.ts",{"_index":397,"title":{},"body":{"modules/UserLoginModule.html":{}}}],["login.service",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserLoginModule.html":{}}}],["login.service.ts",{"_index":400,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:12",{"_index":407,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:7",{"_index":404,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/user",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":257,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["lowercase",{"_index":313,"title":{},"body":{"classes/User.html":{}}}],["matching",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":265,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/SignUpUserDto.html":{},"classes/UserLoginDto.html":{}}}],["minlength(8",{"_index":263,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/SignUpUserDto.html":{},"classes/UserLoginDto.html":{}}}],["miscellaneous",{"_index":481,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":517,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":276,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["mode",{"_index":507,"title":{},"body":{"index.html":{}}}],["model",{"_index":403,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":79,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb://${process.env.database_url",{"_index":195,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":330,"title":{},"body":{"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":190,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":398,"title":{},"body":{"modules/UserLoginModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":192,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":530,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":536,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":200,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["nestframework",{"_index":540,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":191,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/User.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":369,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["new",{"_index":232,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":488,"title":{},"body":{"index.html":{}}}],["npm",{"_index":500,"title":{},"body":{"index.html":{}}}],["null",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":319,"title":{},"body":{"classes/User.html":{}}}],["number(process.env.hash_rounds",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["object",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":519,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":547,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":450,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/SignUpUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["passwordfield",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":246,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["picture",{"_index":277,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["please",{"_index":334,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["post",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["post('signup",{"_index":376,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":352,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["process.env.database",{"_index":199,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.database_port",{"_index":197,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["production",{"_index":509,"title":{},"body":{"index.html":{}}}],["profile.dto.ts",{"_index":299,"title":{},"body":{"classes/UploadProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:5",{"_index":301,"title":{},"body":{"classes/UploadProfileDto.html":{}}}],["profiledto",{"_index":267,"title":{"classes/ProfileDto.html":{}},"body":{"classes/ProfileDto.html":{},"coverage.html":{}}}],["progressive",{"_index":487,"title":{},"body":{"index.html":{}}}],["project",{"_index":520,"title":{},"body":{"index.html":{}}}],["promise",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":305,"title":{},"body":{"classes/User.html":{}}}],["prop({default",{"_index":317,"title":{},"body":{"classes/User.html":{}}}],["prop({index",{"_index":311,"title":{},"body":{"classes/User.html":{}}}],["prop({required",{"_index":322,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":308,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":260,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["provide",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('signup')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":358,"title":{},"body":{"controllers/UserController.html":{}}}],["public()@useguards(localauthguard)@post('login",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["public.decorator",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["public.decorator.ts",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["re",{"_index":343,"title":{},"body":{"classes/User.html":{}}}],["re.test(email",{"_index":347,"title":{},"body":{"classes/User.html":{}}}],["read",{"_index":529,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":211,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["repository",{"_index":498,"title":{},"body":{"index.html":{}}}],["req",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["required",{"_index":296,"title":{},"body":{"classes/SignUpUserDto.html":{},"classes/User.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":504,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":492,"title":{},"body":{"index.html":{}}}],["schema",{"_index":327,"title":{},"body":{"classes/User.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":326,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":349,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":244,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":493,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":494,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupuserdto",{"_index":272,"title":{"classes/SignUpUserDto.html":{}},"body":{"classes/SignUpUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":523,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:24",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:30",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:20",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:35",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/profile.dto.ts",{"_index":268,"title":{},"body":{"classes/ProfileDto.html":{},"coverage.html":{}}}],["src/auth/dto/profile.dto.ts:5",{"_index":271,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/auth/dto/profile.dto.ts:8",{"_index":270,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/auth/dto/user",{"_index":383,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/auth/is",{"_index":374,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":206,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":233,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":247,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":249,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:13",{"_index":253,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":251,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/components/user",{"_index":396,"title":{},"body":{"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["src/components/user/user.controller.ts",{"_index":351,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/components/user/user.controller.ts:20",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["src/components/user/user.controller.ts:28",{"_index":360,"title":{},"body":{"controllers/UserController.html":{}}}],["src/components/user/user.controller.ts:42",{"_index":362,"title":{},"body":{"controllers/UserController.html":{}}}],["src/components/user/user.module.ts",{"_index":415,"title":{},"body":{"modules/UserModule.html":{}}}],["src/components/user/user.service.ts",{"_index":417,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/components/user/user.service.ts:12",{"_index":422,"title":{},"body":{"injectables/UserService.html":{}}}],["src/components/user/user.service.ts:16",{"_index":420,"title":{},"body":{"injectables/UserService.html":{}}}],["src/components/user/user.service.ts:31",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["src/components/user/user.service.ts:7",{"_index":418,"title":{},"body":{"injectables/UserService.html":{}}}],["src/database/database.module.ts",{"_index":189,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/schema/user.schema.ts",{"_index":302,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/schema/user.schema.ts:12",{"_index":325,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:22",{"_index":315,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:25",{"_index":323,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:28",{"_index":324,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:31",{"_index":306,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:34",{"_index":307,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:37",{"_index":310,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:40",{"_index":320,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:43",{"_index":318,"title":{},"body":{"classes/User.html":{}}}],["src/database/schema/user.schema.ts:9",{"_index":321,"title":{},"body":{"classes/User.html":{}}}],["src/dto/login",{"_index":258,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/dto/signup",{"_index":273,"title":{},"body":{"classes/SignUpUserDto.html":{},"coverage.html":{}}}],["src/dto/upload",{"_index":298,"title":{},"body":{"classes/UploadProfileDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":505,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":508,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":510,"title":{},"body":{"index.html":{}}}],["started",{"_index":486,"title":{"index.html":{}},"body":{}}],["starter",{"_index":497,"title":{},"body":{"index.html":{}}}],["statements",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":532,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":228,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.catch(exception",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["support",{"_index":524,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":543,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":513,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":516,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":515,"title":{},"body":{"index.html":{}}}],["tests",{"_index":512,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":522,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":256,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":225,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.userloginservice.finduser(email",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel",{"_index":428,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":431,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":411,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["this.userservice.create(signupuserdto",{"_index":380,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":382,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["timestamps",{"_index":332,"title":{},"body":{"classes/User.html":{}}}],["touch",{"_index":533,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["trim",{"_index":312,"title":{},"body":{"classes/User.html":{}}}],["true",{"_index":202,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["twitter",{"_index":539,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UploadProfileDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":551,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":329,"title":{},"body":{"classes/User.html":{}}}],["types.objectid",{"_index":338,"title":{},"body":{"classes/User.html":{}}}],["types/multer",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":496,"title":{},"body":{"index.html":{}}}],["ui",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":220,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":309,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":314,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":511,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["uploadedfile",{"_index":364,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadprofiledto",{"_index":297,"title":{"classes/UploadProfileDto.html":{}},"body":{"classes/UploadProfileDto.html":{},"coverage.html":{}}}],["uri",{"_index":194,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["useclass",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":201,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usefactory",{"_index":193,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["useguards",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":365,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('picture",{"_index":377,"title":{},"body":{"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":204,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":166,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":416,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":372,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":259,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/SignUpUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":291,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:15",{"_index":282,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:18",{"_index":286,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:22",{"_index":285,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:25",{"_index":281,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:28",{"_index":280,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:31",{"_index":289,"title":{},"body":{"classes/SignUpUserDto.html":{}}}],["user.dto.ts:5",{"_index":262,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:8",{"_index":264,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.name",{"_index":399,"title":{},"body":{"modules/UserLoginModule.html":{},"modules/UserModule.html":{}}}],["user.password",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":367,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user@user.com",{"_index":391,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user@user.com'})@isemail",{"_index":388,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["useradmin",{"_index":392,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["useradmin'})@minlength(8",{"_index":386,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["usercontroller",{"_index":350,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":331,"title":{},"body":{"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":245,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userlogindto",{"_index":48,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userloginmodule",{"_index":92,"title":{"modules/UserLoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules.html":{},"overview.html":{}}}],["userloginservice",{"_index":149,"title":{"injectables/UserLoginService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserLoginModule.html":{},"injectables/UserLoginService.html":{},"coverage.html":{},"overview.html":{}}}],["usermodel",{"_index":405,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":93,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["usernamefield",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":353,"title":{},"body":{"controllers/UserController.html":{}}}],["userschema",{"_index":348,"title":{},"body":{"classes/User.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":366,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":203,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["valid",{"_index":336,"title":{},"body":{"classes/User.html":{}}}],["validate",{"_index":234,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{}}}],["validate(payload",{"_index":236,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":252,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateemail",{"_index":333,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateemail(email",{"_index":341,"title":{},"body":{"classes/User.html":{},"miscellaneous/functions.html":{}}}],["validateuser",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":266,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/ProfileDto.html":{},"classes/SignUpUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":342,"title":{},"body":{"classes/User.html":{}}}],["variable",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":553,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["w",{"_index":344,"title":{},"body":{"classes/User.html":{}}}],["w+)*(\\.\\w{2,3",{"_index":346,"title":{},"body":{"classes/User.html":{}}}],["w+)*@\\w",{"_index":345,"title":{},"body":{"classes/User.html":{}}}],["watch",{"_index":506,"title":{},"body":{"index.html":{}}}],["website",{"_index":537,"title":{},"body":{"index.html":{}}}],["world",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":527,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserLoginModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/all-exceptions.filter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/all-exceptions.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    super.catch(exception, host);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, userLoginDto: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthService } from './auth/auth.service';\nimport { UserLoginDto } from './auth/dto/user-login.dto';\nimport { Public } from './auth/is-public.decorator';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\n\n@ApiBearerAuth()\n@Controller()\nexport class AppController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req, @Body() userLoginDto: UserLoginDto) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserLoginModule\n\nUserLoginModule\n\nAppModule -->\n\nUserLoginModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UserLoginModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AppController } from './app.controller';\nimport { AuthModule } from './auth/auth.module';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { UserLoginModule } from './components/user-login/user-login.module';\nimport { UserModule } from './components/user/user.module';\nimport { DatabaseModule } from './database/database.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    DatabaseModule,\n    UserModule,\n    AuthModule,\n    UserLoginModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    { provide: APP_PIPE, useClass: ValidationPipe },\n    { provide: APP_GUARD, useClass: JwtAuthGuard },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserLoginModule\n\nUserLoginModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserLoginModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserLoginModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserLoginModule } from '../components/user-login/user-login.module';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [\n    UserLoginModule,\n    PassportModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  controllers: [],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userLoginService: UserLoginService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userLoginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { compare } from 'bcrypt';\nimport { Strategy } from 'passport-local';\nimport { UserLoginService } from '../components/user-login/user-login.service';\nimport { User } from '../database/schema/user.schema';\n@Injectable()\nexport class AuthService extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly userLoginService: UserLoginService,\n    private jwtService: JwtService\n  ) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validateUser(email: string, password: string): Promise {\n    console.log('userLoginDto', { email, password });\n    try {\n      const user = await this.userLoginService.findUser(email);\n      if (user && user.password) {\n        if (await compare(password, user.password)) {\n          return user;\n        }\n      }\n      return null;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async login({ email, _id, username }) {\n    return {\n      access_token: this.jwtService.sign({ payload: { email, _id, username } }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useFactory: () => ({\n        uri: `mongodb://${process.env.DATABASE_URL || 'localhost'}:${\n          process.env.DATABASE_PORT || 27017\n        }/${process.env.DATABASE || 'nest'}`,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n        useNewUrlParser: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {\n  constructor() {\n    console.log('DatabaseModule', process.env.DATABASE);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from './is-public.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from './auth.service';\nimport { UserLoginDto } from './dto/user-login.dto';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    console.log({ username, password });\n\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/login-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/login-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MinLength } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsEmail()\n  email: string;\n\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileDto.html":{"url":"classes/ProfileDto.html","title":"class - ProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/profile.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/profile.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/profile.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId } from 'class-validator';\n\nexport class ProfileDto {\n  @IsEmail()\n  username: string;\n\n  @IsMongoId()\n  _id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpUserDto.html":{"url":"classes/SignUpUserDto.html","title":"class - SignUpUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/signup-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthdate\n                            \n                            \n                                country\n                            \n                            \n                                email\n                            \n                            \n                                mobile\n                            \n                            \n                                password\n                            \n                            \n                                picture\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumberString()@Length(10, 12)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/signup-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNumberString,\n  Length,\n  MinLength,\n} from 'class-validator';\n\nexport class SignUpUserDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  email: string;\n\n  @MinLength(8)\n  password: string;\n\n  @IsNumberString()\n  @Length(10, 12)\n  mobile: string;\n\n  @ApiProperty({ required: false })\n  country: string;\n\n  @ApiProperty({ required: false })\n  birthdate: Date;\n\n  @ApiProperty({ required: false, type: 'string', format: 'binary' })\n  picture: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadProfileDto.html":{"url":"classes/UploadProfileDto.html","title":"class - UploadProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/upload-profile.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/upload-profile.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UploadProfileDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  file: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/schema/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthdate\n                            \n                            \n                                breed\n                            \n                            \n                                country\n                            \n                            \n                                email\n                            \n                            \n                                is_deleted\n                            \n                            \n                                mobile\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                picture\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({index: true, trim: true, lowercase: true, validate: undefined, unique: true, required: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/schema/user.schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, SchemaFactory, Schema } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\nexport type UserDocument = User & Document;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ required: true })\n  username: string;\n\n  @Prop({\n    index: true,\n    trim: true,\n    lowercase: true,\n    validate: [validateEmail, 'Please fill a valid email address'],\n    unique: true,\n    required: [true, 'Email address required.'],\n  })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  picture: string;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  breed: string;\n\n  @Prop({ type: Types.ObjectId })\n  country: string;\n\n  @Prop()\n  mobile: number;\n\n  @Prop({ default: false })\n  is_deleted: boolean;\n}\n\nfunction validateEmail(email: string) {\n  var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  return re.test(email);\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(signUpUserDto: SignUpUserDto, picture: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('signup')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n            \n                \n                    Defined in src/components/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpUserDto\n                                    \n                                                SignUpUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/user/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/user/user.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\n\nimport { UserService } from './user.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { SignUpUserDto } from '../../dto/signup-user.dto';\nimport { ApiConsumes } from '@nestjs/swagger';\nimport { Public } from 'src/auth/is-public.decorator';\n@Controller('/users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  getHello() {\n    return 'Hello from users';\n  }\n\n  @Public()\n  @Post('signup')\n  @UseInterceptors(FileInterceptor('picture'))\n  @ApiConsumes('multipart/form-data')\n  async create(\n    @Body() signUpUserDto: SignUpUserDto,\n    @UploadedFile() picture: Express.Multer.File\n  ) {\n    console.log('here', picture);\n\n    try {\n      await this.userService.create(signUpUserDto, picture);\n    } catch (error) {\n      return error.message;\n    }\n  }\n\n  @Get(':id')\n  async findAll(): Promise {\n    return this.userService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'userAdmin'})@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-login.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'user@user.com'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-login.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MinLength } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  @ApiProperty({\n    description: 'user@user.com',\n  })\n  @IsEmail()\n  username: string;\n\n  @ApiProperty({\n    description: 'userAdmin',\n  })\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserLoginModule.html":{"url":"modules/UserLoginModule.html","title":"module - UserLoginModule","body":"\n                   \n\n\n\n\n    Modules\n    UserLoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserLoginModule\n\n\n\ncluster_UserLoginModule_exports\n\n\n\ncluster_UserLoginModule_providers\n\n\n\n\nUserLoginService \n\nUserLoginService \n\n\n\nUserLoginModule\n\nUserLoginModule\n\nUserLoginService  -->\n\nUserLoginModule->UserLoginService \n\n\n\n\n\nUserLoginService\n\nUserLoginService\n\nUserLoginModule -->\n\nUserLoginService->UserLoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/user-login/user-login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserLoginService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserLoginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from '../../database/schema/user.schema';\nimport { UserLoginService } from './user-login.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [],\n  providers: [UserLoginService],\n  exports: [UserLoginService],\n})\nexport class UserLoginModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/user-login/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/components/user-login/user-login.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \nfindUser(email)\n                \n            \n\n\n            \n                \n                    Defined in src/components/user-login/user-login.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from '../../database/schema';\n\n@Injectable()\nexport class UserLoginService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model\n  ) {}\n\n  findUser(email) {\n    return this.userModel.findOne({ email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from '../../database/schema';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/components/user/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(undefined, file)\n                \n            \n\n\n            \n                \n                    Defined in src/components/user/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \nfindUser(email)\n                \n            \n\n\n            \n                \n                    Defined in src/components/user/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { hash } from 'bcrypt';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from '../../database/schema';\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model\n  ) {}\n\n  findUser(email) {\n    return this.userModel.findOne({ email });\n  }\n\n  async create(\n    { username, email, password, birthdate, country, mobile },\n    file\n  ): Promise {\n    console.log(\n      'body',\n      { username, email, password, birthdate, country, mobile },\n      file\n    );\n    password = await hash(password, Number(process.env.HASH_ROUNDS) || 2);\n    const createUser = new this.userModel();\n    createUser.set({ username, email, password, birthdate, country, mobile });\n    return createUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/profile.dto.ts\n            \n            class\n            ProfileDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/is-public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/is-public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/user-login/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/database/schema/user.schema.ts\n            \n            function\n            validateEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/signup-user.dto.ts\n            \n            class\n            SignUpUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dto/upload-profile.dto.ts\n            \n            class\n            UploadProfileDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.6\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.1\n        \n            @types/multer : ^1.4.6\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            helmet : ^4.6.0\n        \n            mongoose : ^5.12.15\n        \n            morgan : ^1.10.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            validateEmail   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/database/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateEmail(email)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserLoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserLoginModule\n\n\n\ncluster_UserLoginModule_exports\n\n\n\ncluster_UserLoginModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserLoginModule\n\nUserLoginModule\n\nAuthModule -->\n\nUserLoginModule->AuthModule\n\n\n\nAppModule -->\n\nUserLoginModule->AppModule\n\n\n\n\n\nUserLoginService \n\nUserLoginService \n\nUserLoginService  -->\n\nUserLoginModule->UserLoginService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserLoginService\n\nUserLoginService\n\nUserLoginModule -->\n\nUserLoginService->UserLoginModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../is-public.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Public   (src/.../is-public.decorator.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/is-public.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IS_PUBLIC_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isPublic'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Public\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'secretKey',\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/database/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
